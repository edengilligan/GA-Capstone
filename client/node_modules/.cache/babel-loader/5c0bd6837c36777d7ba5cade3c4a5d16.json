{"ast":null,"code":"var _jsxFileName = \"/Users/edengilligan/General_Assembly/GA-Capstone/client/src/components/User/NewUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewUser = props => {\n  _s();\n\n  const history = useHistory();\n  const [form, setForm] = useState({\n    name: \"\",\n    password: \"\"\n  });\n\n  const changeHandler = e => {\n    const newFormState = { ...form\n    };\n    newFormState[e.target.name] = e.target.value;\n    console.log(newFormState);\n    setForm(newFormState); // the e.target.name is targeting input type name below\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    fetch('http://localhost:3000/api/auth/login', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(form)\n    }).then(response => response.json()).then(data => {\n      window.localStorage.setItem('token', data.token);\n      console.log(\"props check:\", props);\n      props.setLoginHook(true);\n\n      if (data.token) {\n        history.replace('/');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container px-4 py-5 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: \"https://media.giphy.com/media/Gh5KijQtkU5Y9Jd6Xo/source.gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"name\",\n            id: \"standard-basic\",\n            label: \"Username\",\n            value: form.name,\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"password\",\n            id: \"standard-basic\",\n            label: \"Password\",\n            value: form.password,\n            onChange: changeHandler,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          size: \"large\",\n          variant: \"outlined\",\n          onClick: () => history.push('/'),\n          children: \"Sign up \\uD83D\\uDCDD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewUser, \"YYEPA8pgRasLFUHtu0BjgA+gtKQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewUser\");","map":{"version":3,"sources":["/Users/edengilligan/General_Assembly/GA-Capstone/client/src/components/User/NewUser.js"],"names":["React","useState","useHistory","NewUser","props","history","form","setForm","name","password","changeHandler","e","newFormState","target","value","console","log","submitHandler","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","window","localStorage","setItem","token","setLoginHook","replace","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const NewUser = (props) => {\n    const history = useHistory()\n  const [form, setForm] = useState({\n    name: \"\",\n    password: \"\",\n  });\n  const changeHandler = (e) => {\n    const newFormState = { ...form };\n    newFormState[e.target.name] = e.target.value;\n    console.log(newFormState);\n    setForm(newFormState);\n    // the e.target.name is targeting input type name below\n  }\n  const submitHandler = (e) => {\n    e.preventDefault();\n    fetch('http://localhost:3000/api/auth/login', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(form)\n    })\n    .then(response => response.json())\n    .then(data => {\n      window.localStorage.setItem('token', data.token)\n      console.log(\"props check:\", props)\n      props.setLoginHook(true);\n       if (data.token) {\n        history.replace('/')\n      }})}\n  return (\n     \n    <div>\n    <form onSubmit={submitHandler} noValidate autoComplete=\"off\" >\n      <div className=\"container px-4 py-5 mx-auto\">\n                    <img className=\"logo\" src=\"https://media.giphy.com/media/Gh5KijQtkU5Y9Jd6Xo/source.gif\"></img>\n                        <div> <TextField name=\"name\" id=\"standard-basic\" label=\"Username\" value={form.name} onChange={changeHandler}/></div>\n                        <div> <TextField name=\"password\" id=\"standard-basic\" label=\"Password\" value={form.password} onChange={changeHandler} type=\"password\"/></div>\n                    </div>\n                 <div> <Button type=\"submit\" size=\"large\" variant=\"outlined\" onClick={() => history.push('/')}>Sign up üìù</Button></div>\n                </form>\n             </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}